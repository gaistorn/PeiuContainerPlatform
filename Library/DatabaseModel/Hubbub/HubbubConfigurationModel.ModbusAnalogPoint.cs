//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using NHibernate template.
// Code is generated on: 2020-04-09 오후 6:44:00
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Collections.Generic;

namespace PeiuPlatform.DataAccessor
{

    /// <summary>
    /// There are no comments for PeiuPlatform.DataAccessor.ModbusAnalogPoint, DatabaseModel in the schema.
    /// </summary>
    public partial class ModbusAnalogPoint {
    
        #region Extensibility Method Definitions
        
        /// <summary>
        /// There are no comments for OnCreated in the schema.
        /// </summary>
        partial void OnCreated();

        public override bool Equals(object obj)
        {
          ModbusAnalogPoint toCompare = obj as ModbusAnalogPoint;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.Protocolid, toCompare.Protocolid))
            return false;
          if (!Object.Equals(this.Functioncode, toCompare.Functioncode))
            return false;
          if (!Object.Equals(this.Offset, toCompare.Offset))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + Protocolid.GetHashCode();
          hashCode = (hashCode * 7) + Functioncode.GetHashCode();
          hashCode = (hashCode * 7) + Offset.GetHashCode();
          return hashCode;
        }
        
        #endregion
        /// <summary>
        /// There are no comments for ModbusAnalogPoint constructor in the schema.
        /// </summary>
        public ModbusAnalogPoint()
        {
            this.Functioncode = 3;
            this.Scalefactor = 1f;
            this.Datatypeid = 101;
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Protocolid in the schema.
        /// </summary>
        public virtual int Protocolid
        {
            get;
            set;
        }

    
        /// <summary>
        /// 3  : Holding Register
        /// </summary>
        public virtual short Functioncode
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for Offset in the schema.
        /// </summary>
        public virtual int Offset
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for Label in the schema.
        /// </summary>
        public virtual string Label
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for Disable in the schema.
        /// </summary>
        public virtual bool Disable
        {
            get;
            set;
        }

    
        /// <summary>
        /// value / scalefactor
        /// </summary>
        public virtual float Scalefactor
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for Devicetypeid in the schema.
        /// </summary>
        public virtual int Devicetypeid
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for Pointid in the schema.
        /// </summary>
        public virtual string Pointid
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for Datatypeid in the schema.
        /// </summary>
        public virtual int Datatypeid
        {
            get;
            set;
        }
    }

}
